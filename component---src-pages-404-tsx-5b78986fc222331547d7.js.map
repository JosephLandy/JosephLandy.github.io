{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/PostCard.tsx"],"names":["pageQuery","ErrorContent","ErrorCode","colors","lightgrey","ErrorDescription","midgrey","ErrorLink","NotFoundPage","props","edges","data","allMarkdownRemark","css","outer","SiteNavMain","inner","isHome","className","style","textAlign","to","PostFeed","map","node","key","fields","slug","post","PostCard","large","frontmatter","image","PostCardStyles","PostCardLarge","PostCardImageLink","PostCardImage","childImageSharp","fluid","alt","title","height","PostCardContent","PostCardContentLink","PostCardHeader","tags","PostCardPrimaryTag","join","Provider","value","color","size","PostCardTitle","featured","PostCardExcerpt","excerpt","PostCardMeta","github","website","PostCardBylineContent","timeToRead","lighten","darkmode","darkgrey","blue"],"mappings":"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","file":"component---src-pages-404-tsx-5b78986fc222331547d7.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport React from 'react';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, PostFeed, SiteNavMain } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst NotFoundPage: React.FC<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header css={[outer]}>\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n        </header>\n        <main css={[outer, ErrorContent]} className=\"error-content\">\n          <div css={[inner]}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link css={ErrorLink} to=\"\">\n                Go to the front page â†’\n              </Link>\n            </section>\n\n            <div css={PostFeed} className=\"post-feed\">\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 3\n      filter: { frontmatter: { draft: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ErrorContent = css`\n  padding: 14vw 4vw 6vw;\n\n  @media (max-width: 800px) {\n    padding-top: 24vw;\n  }\n\n  @media (max-width: 500px) {\n    padding-top: 28vw;\n  }\n\n  @media (min-width: 940px) {\n    .post-card {\n      margin-bottom: 0;\n      padding-bottom: 0;\n      border-bottom: none;\n    }\n  }\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  color: ${colors.lightgrey};\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.75;\n\n  @media (max-width: 800px) {\n    font-size: 11.2rem;\n  }\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n\n  @media (max-width: 800px) {\n    margin: 5px 0 0 0;\n    font-size: 1.8rem;\n  }\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\nexport default NotFoundPage;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n// import _ from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport { AiFillStar } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nimport PostCardLinks from './PostCardLinks';\n\nexport interface PostCardProps {\n  post: PageContext;\n  large?: boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({ post, large = false }) => {\n  // const date = new Date(post.frontmatter.date);\n  // const datetime = format(date, 'yyyy-MM-dd');\n  // const displayDatetime = format(date, 'dd LLL yyyy');\n  return (\n    <article\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${\n        large ? 'post-card-large' : ''\n      }`}\n      css={[PostCardStyles, large && PostCardLarge]}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter?.image?.childImageSharp?.fluid && (\n              <Img\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                fluid={post.frontmatter.image.childImageSharp.fluid}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <PostCardHeader className=\"post-card-header\">\n            {post.frontmatter.tags && (\n              <PostCardPrimaryTag className=\"post-card-primary-tag\">\n                {/* {post.frontmatter.tags[0]} */}\n                {post.frontmatter.tags.join(' ')}\n              </PostCardPrimaryTag>\n            )}\n\n            <IconContext.Provider value={{ color: 'gold', size: '0.75em' }}>\n              <PostCardTitle className=\"post-card-title\">\n                {post.frontmatter.featured && <AiFillStar/>} &nbsp;\n                {post.frontmatter.title}\n              </PostCardTitle>\n            </IconContext.Provider>\n          </PostCardHeader>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <PostCardLinks github={post.frontmatter.github} website={post.frontmatter.website} />\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span className=\"post-card-byline-date\">\n              {/* <time dateTime={datetime}>{displayDatetime}</time>{' '} */}\n              <span className=\"bull\">&bull;</span> {post.timeToRead} min read\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 40px;\n  padding: 0 20px 40px;\n  min-height: 220px;\n  border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  background-size: cover;\n\n  /* @media (prefers-color-scheme: dark) { */\n    border-bottom-color: ${lighten('0.08', colors.darkmode)};\n  /* } */\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  margin: 0 0 0.2em;\n  color: ${colors.blue};\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  // transition isn't working for some reason. \n  transition: color 0.2s ease-in-out;\n\n  /* @media (prefers-color-scheme: dark) { */\n    color: rgba(255, 255, 255, 0.85);\n  /* } */\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n\n  /* @media (prefers-color-scheme: dark) { */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  /* } */\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 4px 0 0 10px;\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: ${lighten('0.2', colors.darkgrey)}; */\n    color: rgba(255, 255, 255, 0.75);\n    font-weight: 600;\n  }\n\n  /* @media (prefers-color-scheme: dark) { */\n    /* a {\n      color: rgba(255, 255, 255, 0.75);\n    } */\n  /* } */\n`;\n\nconst PostCardHeader = styled.header`\n  margin: 15px 0 0;\n`;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/images/look_left.png","webpack:///./src/components/Footer.tsx","webpack:///./src/utils.ts","webpack:///./src/images/look_right.png","webpack:///./src/images/look_forward.png","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/MonsterImage.tsx","webpack:///./src/components/MonsterFooter.tsx","webpack:///./src/templates/index.tsx"],"names":["module","exports","Footer","css","outer","SiteFooter","inner","SiteFooterContent","className","to","config","title","Date","getFullYear","footer","SiteFooterNav","facebook","href","target","rel","twitter","setLightness","colors","darkgrey","useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","getMousePos","canvas","evt","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","navCss","darken","Pagination","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","String","fromCharCode","Array","from","length","_","i","key","images","forward","right","MonsterImage","srcindex","setSrcIndex","interval","setInterval","clearInterval","src","alt","MonsterWrapper","DownButton","isHidden","onClick","theta","MonsterFooter","props","hidden","setHidden","size","animationcss","setTimeout","transitionInDelay","transitionkeys","w","keyframes","transitionKeyframes","bobkeys","bobKeyframes","SiteHeaderStyles","lighten","pageQuery","HomePosts","IndexPage","data","header","childImageSharp","fixed","edges","allMarkdownRemark","filter","post","node","frontmatter","draft","process","posts","featured","concat","console","log","Helmet","lang","name","content","description","property","siteUrl","googleSiteVerification","split","Wrapper","style","backgroundImage","SiteNav","isHome","SiteMain","Posts","PostFeed","map","index","PostCard","fields","slug","large","children","pageContext"],"mappings":"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","file":"component---src-templates-index-tsx-c033b307692138cb84a1.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/look_left-344327bb961c5ed9bb2c55116c60c488.png\";","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.title} {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          {/* <Link to=\"/\">Latest Posts</Link> */}\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          {/* <a href=\"https://github.com/scttcper/gatsby-casper\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Casper\n          </a> */}\n\n          {/* <a href=\"/rss.xml\">RSS</a> */}\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\n","import { useState, useEffect } from 'react';\n\n// import math from 'mathjs';\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{ width?: number; height?: number }>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n// lets use a tuple here?\n// type Point = [number, number]\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n\nexport function getMousePos(canvas: Element, evt: React.MouseEvent): Point {\n  let rect = canvas.getBoundingClientRect();\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top,\n  };\n}\n\n\n// export function pointToVector(p: Point): math.Matrix {\n//   // return math.matrix([p.x, p.y]);\n// }","module.exports = __webpack_public_path__ + \"static/look_right-2d248a71b1ebe6afc1932e56ce5cfed5.png\";","module.exports = __webpack_public_path__ + \"static/look_forward-66f129c76a07fa1181d207ac323f18db.png\";","import { Link } from 'gatsby';\nimport React from 'react';\nimport { darken } from 'polished';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { css } from '@emotion/core';\nimport React, { useState, useEffect } from 'react';\n\nimport forward from '../images/look_forward.png';\nimport left from '../images/look_left.png';\nimport right from '../images/look_right.png';\n\nconst images = [forward, left, forward, right];\n\nconst t = 2000;\n\nconst MonsterImage: React.FC = () => {\n  const [srcindex, setSrcIndex] = useState(1);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      // console.log(\"interval fired\");\n      setSrcIndex(srcindex => (srcindex + 1) % images.length);\n    }, t);\n    return () => {\n      // console.log('clearing interval'); // never seems to actually happen\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <img\n      src={images[srcindex]}\n      alt=\"Monster\"\n      css={css`\n        /* opacity: 90%; // for some reason, opacity was reduced on images in IndexLayout\n          I kind of like it reduced though. */\n        width: 100%;\n        max-width: 1000px;\n      `}\n    />\n  );\n};\n\nexport default MonsterImage\n","import React, { useEffect, useState } from 'react';\nimport { css, keyframes, SerializedStyles } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { BsChevronCompactDown } from 'react-icons/bs';\n\nimport {useWindowSize} from '../utils';\nimport MonsterImage from './MonsterImage';\n/*\nOk, so the image width at max is 1000px, height is 562.5px\nwhen not max, the width of both Wrapper and the image = the container width. \nheight of image is (1080/1920) * width\nHeight of down button is always 112 by 112.\n*/\n\ninterface Props {}\n\nconst ratio = 1080 / 1920;\n// transition in keyframe actually starts a little too far down. I think I'm not accounting for the size of the\n// button. It also jerks a little bit.\nfunction transitionKeyframes(width: number) {\n  let w = width;\n  if (width >= 1000) {\n    w = 1000;\n  }\n  return keyframes`\n    0% {\n      transform: translateY(${ratio * w}px);\n    }\n    100% {\n      // this needs to be relative to size of window as well, using the ratio of\n      // the desired translating at with=1000. If it's 100px at 1000,\n      // it should be 70px at 700. bob keyframes found with the same ratio.\n      transform: translateY(${0.1 * w}px);\n    }\n  `;\n}\n\nfunction bobKeyframes(width: number) {\n  // first, clamp width at less than or equal to 1000.\n  let w = width;\n  if (width >= 1000) {\n    w = 1000;\n  }\n  return keyframes`\n    0% {\n      transform: translateY(${0.1 * w}px);\n    }\n    25% {\n      transform: translateY(${0.15 * w}px);\n    }\n    50% {\n      transform: translateY(${0.1 * w}px);\n    }\n    75% {\n      transform: translateY(${0.05 * w}px);\n    }\n    100% {\n      transform: translateY(${0.1 * w}px);\n    }\n  `;\n}\n\n// holds the monster image and the control to get rid of it.\nconst MonsterWrapper = styled.div`\n  position: fixed;\n  bottom: 0px;\n  z-index: 1000000;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst DownButton: React.FC<{ isHidden: boolean; onClick: any }> = ({ isHidden, onClick }) => {\n  let theta;\n  if (isHidden) theta = 180;\n  else theta = 0;\n  return (\n    <BsChevronCompactDown\n      css={css`\n        font-size: 7em;\n        &:hover {\n          color: lightgreen;\n        }\n        &:active {\n          color: green;\n        }\n        transform: rotate(${theta}deg);\n      `}\n      onClick={onClick}\n    />\n  );\n};\n\nconst transitionInDelay = 4;\nconst transitionInDuration = 8;\nconst bobDuration = 5;\n\nconst MonsterFooter: React.FC<Props> = props => {\n  const [hidden, setHidden] = useState(true);\n  const size = useWindowSize();\n\n  // if the animation is still hidden a certain time after page load,\n  // automatically unhide and play it.\n  useEffect(() => {\n    setTimeout(() => {\n      if (hidden) {\n        setHidden(false);\n      }\n    }, transitionInDelay * 1000);\n  }, []);\n\n  // construct the css with keyframes as a function of window width.\n  let animationcss: SerializedStyles | undefined;\n\n  if (size.height && size.width) {\n    // console.log(`width: ${size.width} height: ${size.height}`);\n\n    const transitionkeys = transitionKeyframes(size.width);\n    const bobkeys = bobKeyframes(size.width);\n\n    animationcss = css`\n      animation-name: ${bobkeys}, ${transitionkeys};\n      animation-duration: ${bobDuration}s, ${transitionInDuration}s;\n      animation-timing-function: linear;\n      animation-iteration-count: infinite, 1;\n      /* animation-delay: ${transitionInDelay + transitionInDuration}s, ${transitionInDelay}s; */\n      // animation delay is now handled in js \n      animation-delay: ${transitionInDuration}s, 0s;\n    `;\n  }\n\n  return (\n    <MonsterWrapper\n      css={\n        hidden || !animationcss\n          ? css`\n              img {\n                display: none;\n              }\n            `\n          : animationcss\n      }\n    >\n      <DownButton\n        isHidden={hidden}\n        onClick={() => {\n          setHidden(!hidden);\n        }}\n      />\n      <MonsterImage />\n    </MonsterWrapper>\n  );\n};\n\nexport default MonsterFooter;\n","import { graphql } from 'gatsby';\nimport { FixedObject } from 'gatsby-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { css } from '@emotion/core';\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\nimport MonsterFooter from '../components/MonsterFooter';\nimport { lighten } from 'polished';\nimport { colors } from '../styles/colors';\n\n// moved from shared.ts it's only used in index.\nconst SiteHeaderStyles = css`\n  position: relative;\n  /* margin-top: 64px; */\n  padding-bottom: 12px;\n  color: #fff;\n  background: ${lighten('-0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 140px;\n    background: linear-gradient(rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0));\n  }\n`;\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.fixed;\n\n  // filter out draft posts.\n  const edges = props.data.allMarkdownRemark.edges.filter(\n    post => post.node.frontmatter.draft !== true || process.env.NODE_ENV !== 'production',\n  );\n  // put featured posts first, then the rest of the posts.\n  const posts = edges\n    .filter(post => post.node.frontmatter.featured === true)\n    .concat(edges.filter(post => post.node.frontmatter.featured !== true));\n\n  console.log(process.env.NODE_ENV)\n  \n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fixed.src}')`,\n          }}\n        >\n          <SiteNav isHome />\n          <div css={inner}>\n            {/* inner results in SiteNav combined to the inner area of the page. I think it looks better\n            Spread out.  */}\n            {/* <SiteNav isHome /> */}\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">\n                {/* {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '55px' }}\n                    src={props.data.logo.childImageSharp.fixed.src}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )} */}\n                {config.title}\n              </SiteTitle>\n              {/* <SiteDescription>{config.description}</SiteDescription> */}\n            </SiteHeaderContent>\n          </div>\n        </div>\n        <main css={SiteMain}>\n          <div css={[inner, Posts]}>\n            <h3>Projects and Posts</h3>\n            <div css={[PostFeed]}>\n              {posts.map((post, index) => (\n                <PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n              ))}\n            </div>\n          </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer />\n        <MonsterFooter />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    # logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n    logo: file(relativePath: { eq: \"img/logo_JosephLandy.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/blog-cover.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(width: 2000, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      # filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            website\n            github\n            featured\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      padding-bottom: 40px;\n      min-height: 280px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}